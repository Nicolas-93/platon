# https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 5M;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    upstream api {
        least_conn;
        server api:8000 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        listen [::]:80;

        root /usr/share/nginx/html;
        index index.html;

        server_name example.com www.example.com;

        # Redirect non-https traffic to https
        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }

        location ~ /.well-known/acme-challenge {
            allow all;
            root /usr/share/nginx/html;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name example.com www.example.com;

        server_tokens off;

        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

        ssl_buffer_size 8k;

        ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

        ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        ssl_prefer_server_ciphers on;

        ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        ssl_ecdh_curve secp384r1;
        ssl_session_tickets off;

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8;

        location / {
            try_files $uri$args $uri$args/ /index.html;
        }

        location /media {
            autoindex on;
            alias /media/;
        }

        location /static {
            autoindex on;
            alias /static/;
        }

        location ~ /(api|ws) {
            proxy_pass http://api;

            proxy_http_version 1.1;

            proxy_redirect off;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;

            proxy_cache_bypass $http_upgrade;
        }

        root /usr/share/nginx/html;
        index index.html;
    }
}
