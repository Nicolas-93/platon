version: '3.7'

services:
  redis:
    restart: always
    image: redis:6
    container_name: platon_redis
    ports:
      - 6379
    volumes:
      - redisdata:/data
    networks:
      - platon-network

  postgres:
    restart: always
    image: postgres:13
    container_name: platon_postgres
    ports:
      - 5432
    volumes:
      - postgresdata:/var/lib/postgresql/data
    networks:
      - platon-network
    env_file:
      - .env

  api:
    restart: always
    build:
      context: ../
      dockerfile: platon/api/Dockerfile
    image: platon/api
    container_name: platon_api
    command: sh -c "python3 manage.py waitdb &&
                    python3 manage.py migrate &&
                    python3 manage.py createdefaults &&
                    python3 manage.py collectstatic --noinput &&
                    uvicorn platon.asgi:application --port 8000 --host 0.0.0.0 --workers 1"
    ports:
      - 8000
    volumes:
      - media:/api/media
      - static:/api/static
    networks:
      - platon-network
    environment:
      - 'SANDBOX_URL=http://$SANDBOX_HOST:$SANDBOX_PORT'
    env_file:
      - .env
    depends_on:
      - redis
      - postgres
    #  - elasticsearch

  server:
    restart: always
    build:
      context: ../
      dockerfile: platon/server/Dockerfile.prod
    image: platon/server
    container_name: platon_server
    ports:
      - 80:80
      - 443:433
    volumes:
      # DJANGO
      - media:/api/media
      - static:/api/static

      # NGINX CONF
      - ./server/nginx.prod.conf:/etc/nginx/nginx.conf

      # SSL CONF
      - ./server/dhparam/dhparam.pem:/etc/nginx/dhparam.pem
      # REPLACE THESE FILES WITH PRODUCTION SSL FILES
      - ./server/certs/example.com.crt:/etc/nginx/ssl/example.com.crt
      - ./server/certs/example.com.key:/etc/nginx/ssl/example.com.key
    networks:
      - platon-network
    links:
      - api:api
    depends_on:
      - api

  celery:
    restart: always
    image: platon/api
    container_name: platon_celery
    command: celery -A platon worker --beat --scheduler django -l info --uid=nobody --gid=nogroup
    volumes:
      - ../platon-server/:/api
    networks:
      - platon-network
    env_file:
      - .env
    depends_on:
      - api
      - redis
      - postgres

  # elasticsearch:
  #   restart: always
  #   image: elasticsearch:7.12.0
  #   container_name: platon_elasticsearch
  #   ports:
  #     - 9200
  #     - 9300
  #   volumes:
  #     - elasticsearchdata:/usr/share/elasticsearch/data
  #   networks:
  #     - platon-network
  #   environment:
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms750m -Xmx750m


volumes:
  media:
  static:
  redisdata:
  postgresdata:
  #elasticsearchdata:


networks:
  platon-network:
    driver: bridge
